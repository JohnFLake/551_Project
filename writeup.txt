ContributionsJohn Lake - During the Build-It phase, John worked on the authentication and encryption, and helped work on the ATM client.During the break-it phase, he found correctness bugs associated with parsing errors, and incorrectly validating input.  In particular, he targeted teams that did not correctly parse POSIX-compliant input, or did not handle very large integer inputs correctly.During the Fix-It phase, John corrected a bug we had when parsing command line arguments.  Valid string arguments that started with a dash were interpreted as additional options to the program, rather than arguments to previous options.Jeremy Lautman - During the Build-It phase, Jeremy created and maintained the maven build system, and wrote the bank. He additionally implemented the request acknowledgement functionality to prevent the man in the middle from keeping the bank and atm from agreeing on transaction success.During the Break-it phase, Jeremy wrote the replay attacks and communication drop attacks. He also wrote a brute force attack against a team that was using 4 digit card files that could not be demonstrated within the competition framework.During the Fix-it phase, Jeremy identified a way to correct most of the Posix related bugs by replacing the argument parser that supported Posix, Gnu, and Java style options with a deprecated one that supported only Posix. He also wrote the disputes for the two exploits performed against the team.Ryan Hub – During the Build-It Phase, Ryan started building the ATM client and performed testing multiple types of input trying to break our program so we could fix it before going into the Break-It Phase. During the Break-It Phase, Some of Ryan’s major finds in the break it phase was a bug in the oracle that treated reserved IPs and invalid input but due to the specs it should have been legal input; when you try to create an account with the same name it will lock out that account forever, and one team automatically appended .card to the end of a card file if .card is not at the end which is not true according to the specs.During the Fix-It Phase, Ryan downloaded all the breaks against our team and organized a spreadsheet to show which teams had the same break against us and a status tracker to see if we submitted a fix. He wrote up and submitted a dispute against our team that was a bug in the oracle and thus not a break. He fixed when there are not 4 ip segments in the ip address, making sure the ip times out after 10 seconds, rolls back transaction for a duplicate account name, ATM throwing wrong error when bad auth file submitted, and when extra periods are added to end of ip address. The most interesting break found against our team was when you want to name an account name, card file, or auth file the same name the same as an option (-n, -a, ect.) Our program read that in as an option and not an argument causing our program to exit. John implemented a smart fix by reading in the arguments and options and if an argument was the same as an option it would append that argument with an underscore at the beginning before parsing. Then after parsing it would remove the underscore. The most interesting break we did was the replay attack. The replay attack captured a request from the atm and submitted it to the bank twice instead of just once. As vulnerable systems did not include some single use request marker, the bank honored both requests from the man in the middle as the atm had constructed a valid request. The demonstration of the attack was that an attacker would deposit money into his own account once, and through the man in the middle cause the bank to think that it had been deposited twice. This would result in an attacker being able to add an arbitrary amount of money to his own account.A break Ryan found that was not accepted by the Oracle, but per the specs should be a break is that if an account was created, say ryan, and then you try to create an account called ryan* it would create the account ryan.card. The spec does not allow * as legal input. This is due to the fact on how the teams had their bash scripts set up. This break was found on all teams except 6, 11, and 13.